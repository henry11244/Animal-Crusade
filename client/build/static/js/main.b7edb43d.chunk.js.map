{"version":3,"sources":["utils/queries.js","pages/Home.js","utils/mutations.js","utils/auth.js","pages/Signup.js","pages/Login.js","components/Header.js","components/Footer.js","app.js","index.js"],"names":["QUERY_USER","gql","Home","useQuery","loading","data","className","LOGIN_USER","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Signup","useState","username","password","formState","setFormState","useMutation","addUser","error","handleChange","event","target","name","value","handleFormSubmit","preventDefault","console","log","variables","Auth","login","to","onSubmit","placeholder","type","onChange","style","cursor","message","Login","props","Header","fontSize","fontWeight","loggedIn","onClick","logout","Footer","useLocation","navigate","useNavigate","pathname","getFullYear","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","basename","process","exact","strict","document","getElementById"],"mappings":"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","file":"static/js/main.b7edb43d.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      password\n      scores []\n    }\n  }\n`;\n\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport Gameboard from \"../components/Gameboard\";\nimport Scoreboard from \"../components/Scoreboard\";\n\nimport { QUERY_USER } from \"../utils/queries\";\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_USER);\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div className=\"col-12 col-md-10 my-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <>\n              <Gameboard />\n              <Scoreboard />\n            </>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_THOUGHT = gql`\n  mutation addThought($thoughtText: String!) {\n    addThought(thoughtText: $thoughtText) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n      }\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($thoughtId: ID!, $commentText: String!) {\n    addComment(thoughtId: $thoughtId, commentText: $commentText) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        createdAt\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{\" \"}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.username}\n                  onChange={handleChange}\n                />\n\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: \"pointer\" }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ username: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      username: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{\" \"}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.username}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: \"pointer\" }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-info text-dark mb-4 py-3 display-flex align-center\">\n      <div className=\"container flex-column justify-space-between-lg justify-center align-center text-center\">\n        <Link className=\"text-dark\" to=\"/\">\n          <h1 className=\"m-0\" style={{ fontSize: '3rem' }}>\n            Tech Friends\n          </h1>\n        </Link>\n        <p className=\"m-0\" style={{ fontSize: '1.75rem', fontWeight: '700' }}>\n          Meet your new programming pals.\n        </p>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/me\">\n                View My Profile\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className=\"w-100 mt-auto text-dark p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button\n            className=\"btn btn-dark mb-3\"\n            onClick={() => navigate(-1)}\n          >\n            &larr; Go Back\n          </button>\n        )}\n        <h4>&copy; {new Date().getFullYear()} - Tech Friends</h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n            </Routes>\n            <div>app test</div>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\n\n// import './App.css';\n\n// function App() {\n\n//   return (\n//     <div>test app.js</div>\n//   );\n// }\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route\n          path=\"*\"\n          element={<App />}\n          exact={false}\n          strict={false}\n        />\n      </Routes>\n    </Router>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}